#!/bin/bash
fhelp() {
    echo "sksctl usrinfo [OPTIONS] USER_NAME"
    echo "依据姓名查询某个用户的帐号数据"
    echo "OPTIONS:"
    echo "	-s SIZE:	请求获取的数据条目数，默认为 10"
    echo "	-5:		输出服务器返回的用户密码 MD5，无论本地字典能否查到对应密码"
    echo "	-h:		显示帮助"
    echo '本程序调用子命令 bindinfo, 但 bindinfo 还具有更多功能，参见 sksctl bindinfo -h'
    exit
}
url='http://'$ACIP'/cgi-bin/sgw_cgi/cgi_list_auth_mgmt.sh?s='`date +%s%3N`'&page_number=1&page_size='
while getopts 's:h5' opt; do
	case $opt in
		s) sz=$OPTARG ;;
		5) md5=true ;;
		h) fhelp ;;
		?) fhelp ;;
	esac
done
shift $((OPTIND - 1))
if [[ $1 == '' ]] ;then
	fhelp
fi
if [[ $sz == '' ]] ;then
	sz=10
fi
url=$url$sz'&name='$(echo -n $1|xxd -p -u |sed 's/[0-9A-Z]\{2\}/%&/g')
echo -e '请求链接: ''\e[33m'$url'\e[0m'
IFS=$'\n'
result=`curl --silent $url |sed '1,/<row>/d' |grep '_name\|pwd\|duty\|count' |sed 's/[[:space:]]*<[^>]*>//g'`
unset IFS
i=0
for item in $result
do
    data[i]=$item
    ((i++))
done
for j in `seq $((i/6))`
do
	((k=(j-1)*6))
	echo ''
	echo -e '\e[34m姓名:\e[0m	'${data[$((k+2))]}
	echo -e '\e[32m账号:\e[0m	'${data[$k]}
	echo '职务:	'${data[$((k+3))]}
	pwd_out=`$KDSY/bin/getpwd ${data[$((k+1))]}`
	if [[ $pwd_out != '0000-1' ]] ;then
		echo -e '\e[32m密码:\e[0m	'$pwd_out
	else
		echo -e '\e[31m本地字典未找到密码，请访问在线数据库进行反查\e[0m'
	fi
	if [[ $pwd_out == '0000-1' || $md5 == true ]] ;then
		echo -e '\e[33mMD5:\e[0m	'${data[$((k+1))]}
	fi
	dn=${data[$((k+4))]}
	echo -n '设备数:	'
	case $dn in
		0) echo -e -n '\e[32m' ;;
		1) echo -e -n '\e[34m' ;;
		2) echo -e -n '\e[33m' ;;
		?) echo -e -n '\e[31m' ;;
	esac
	echo -e ${data[$((k+4))]}/${data[$((k+5))]}'\e[0m'
	echo ''
	echo -e '\e[33m以下是该用户绑定的设备信息\e[0m'
	$KDSY/bin/kdsy-bindinfo -t account ${data[$k]}
done
