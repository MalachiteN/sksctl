#!/bin/bash

help() {
	echo 'kdsy-analyze [OPTIONS]'
	echo '使用本地 sqlite3 数据库对登录数据进行一些分析'
	echo 'OPTIONS:'
	echo '	-f FILE:	指定数据库文件，默认为 '$KDSY'/kdsy.db'
	echo '	-h:		显示帮助信息'
	exit
}

while getopts 'f:drh' opt ;do
	case $opt in
		f) f=$OPTARG ;;
		d) d=true ;;
		r) r=true ;;
		h) help ;;
		?) help ;;
	esac
done
shift $((OPTIND-1))

if [[ ! -d $KDSY ]] ;then
	echo '尚未执行安装脚本，请退出执行安装脚本（./install.sh）'
	exit
fi

if [[ -z $f ]] ;then
    f=$KDSY'/kdsy.db'
    echo -e '\e[33m使用默认数据库 '$KDSY'/kdsy.db\e[0m'
fi

if [[ ! -z $d ]] ;then
	read -p '重置数据库？(Y/n): ' tmp
	case $tmp in
		[Yy][Ee][Ss]|[Yy])
			echo -e '\e[31m删除\e[0m'
			if [[ -f $f ]] ;then
				mv $f $f'.bak'
			else
				echo -e '\e[31m操作失败：数据库不存在\e[0m'
			fi
		;;
		[Nn][Oo]|[Nn]) echo '取消' ;;
	esac
fi

if [[ ! -z $r ]] ;then
	read -p '恢复最近一次删除的数据库？当前若存在数据库，将被覆盖 (Y/n): ' tmp
	case $tmp in
        [Yy][Ee][Ss]|[Yy])
            echo -e '\e[31m恢复\e[0m'
			if [[ -f $f'.bak' ]] ;then
            	mv $f'.bak' $f
            else
            	echo -e '\e[31m操作失败：备份不存在\e[0m'
            fi
        ;;
        [Nn][Oo]|[Nn]) echo '取消' ;;
    esac
fi

if [[ ! -f $f ]] ;then
	echo -e '\e[33m数据库文件不存在，正在创建文件\e[0m'
	touch $f
	echo -e '\e[33m正在创建数据表\e[0m'
	sqlite3 $f <<-end
	CREATE TABLE USR(
		MAC		TEXT	PRIMARY KEY		NOT NULL,
		IP		TEXT							,
		SUM		INT						NOT NULL,
		EXPIRE	INT						NOT NULL
	);
	CREATE TABLE LOGIN(
		ID		INT		PRIMARY KEY		NOT NULL,
		MAC		TEXT					NOT NULL,
		ACCESS	INT						NOT NULL,
		EXPIRE	INT						NOT NULL
	);
	.tables
	.quit
	end
fi

url='http://1.1.1.1/cgi-bin/sgw_cgi/cgi_list_user_auth.sh?s='$(date +%s%3N)'&page_number=1&net_intf=0&user=sks&page_size=300'
echo 'URL: '$url
result=`curl -sL $url|sed '1,/<row>/d'|grep 'mac\|ip\|access\|expire'|sed 's/[[:space:]]*<[^<]*>//g'`

id=$(sqlite3 $f <<- end
SELECT MAX(ID) FROM LOGIN;
.quit
end
)
if [[ -z $id ]] ;then
	id=0
fi

for i in `seq 0 4 $(grep -c $'\n' <<< $result)` ;do
	echo $i
done|less
